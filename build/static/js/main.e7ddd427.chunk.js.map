{"version":3,"sources":["components/SearchBar.js","components/Banner.js","components/ConferenceTeams.js","components/ConferenceList.js","pages/Home.js","components/Blurb.js","components/Graph.js","pages/Team.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","liststyle","color","liststyletype","useState","search","setSearch","searchResults","setSearchResults","useEffect","results","teamsList","filter","team","toLowerCase","includes","className","type","onChange","event","target","value","id","placeholder","map","item","style","onClick","to","pathname","state","Banner","bannerStyle","Team","Teams","color_secondary","background","color_primary","MainContainer","styled","div","ConferenceTeams","Conference","open","setOpen","aria-controls","aria-expanded","Collapse","in","conference","ConferenceList","align","conf","Home","setTeams","fetch","then","response","json","data","ReactGA","initialize","pageview","window","location","name","content","Blurb","blurbStyle","commit_count","avg_score","Graph","layout","width","height","title","setTeam","url","match","params","team_aggregate_stats","team_position_stats","team_state_stats","team_competition_stats","App","console","log","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7ddd427.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import useStateWithCallback from 'use-state-with-callback';\nimport { Link } from 'react-router-dom';\n// import styled from 'styled-components';\nimport teamsList from './Teams.json';\n\n\nexport const SearchBar = (props) => {\n    const liststyle = {\n        // display: 'None',\n        color: 'Black',\n        liststyletype: 'None'\n    };\n\n    const [search, setSearch] = useState('');\n    const [searchResults, setSearchResults] = useState([], searchResults => {\n    });\n    \n    useEffect(() => {\n        if (search === '') {\n            setSearchResults([]);\n        }\n        else {\n            const results = teamsList.filter((team) => team.team.toLowerCase().includes(search));\n            setSearchResults(results);\n        }\n    }, [search]);\n\n    const handleChange = event => {\n        setSearch(event.target.value);\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center\">\n            <input type=\"text\" onChange={handleChange} id='teamInput' placeholder='Team Name' value={search} className=\"form-control form-control-lg text-center\"/>\n            <div id=\"search_results\">\n                {searchResults.map(item => {\n                    return (\n                        <div className=\"list-group-item list-group-item-action justify-content-between\">\n                            <Link style={liststyle} onClick={() => setSearch('')} to={{pathname: '/team/' + item.team, state: item}}>{item.team}</Link>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SearchBar from './SearchBar';\n\nexport const Banner = ({Team, Teams}) => {\n    let bannerStyle;\n    // console.log(Teams);\n    if (Team) {\n        bannerStyle = {\n            color: Team.color_secondary,\n            background: Team.color_primary\n        }\n    }\n    else {\n        bannerStyle = {\n        }\n    }\n    return (\n        <MainContainer className=\"jumbotron text-center\" style={bannerStyle}>\n            <Link to= \"/\"><h1 style={bannerStyle}>Cruitathon</h1></Link>\n            <p style={bannerStyle}>Using College Football recruiting data to prove that my team is better than yours</p>\n            <SearchBar Teams= {Teams} />\n        </MainContainer>\n    )\n}\n\nexport default Banner;\n\n//  STYLED COMPONENTS STYLES\nconst MainContainer = styled.div`\n    background: var(--home-blue);\n    \n    * {\n        font-family: college-block;\n        color: var(--home-yellow);\n    }\n\n`","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Collapse from 'react-bootstrap/Collapse';\n\nexport const ConferenceTeams = ( { Conference, Teams }) => {\n    const [open, setOpen] = useState(false);\n    // console.log(Teams);\n    return (\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <h5 className=\"mb-0\"><button onClick={() => setOpen(!open)}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open} className=\"btn btn-link\">{Conference}</button></h5>\n            </div>\n            <Collapse in={open}>\n                <div className=\"card-body collapse\" id=\"example-collapse-text\">\n                    {Teams.map(Team => {\n                        if (Team.conference === Conference ) { \n                            // console.log(Teams);\n                            return (\n                                <div>\n                                    <Link to={{pathname: '/team/' + Team.team, state: Teams}}>{Team.team}</Link>\n                                </div>\n                            )\n                        }\n                    })}\n                </div>\n            </Collapse>\n            \n        </div>\n    )\n}\n\nexport default ConferenceTeams;","import React from 'react';\nimport styled from 'styled-components';\nimport ConferenceTeams from './ConferenceTeams';\n// import { List } from \"semantic-ui-react\";\n\n\nexport const ConferenceList = ({ Teams }, props) => {\n    const powerFive = ['ACC', 'Big Ten', 'Big 12', 'Pac-12', 'SEC', 'C-USA', 'AAC', 'Sun Belt', 'MWC', 'MAC', 'Ind'];\n    // console.log(props);\n    // const [Teams, setTeams] = useState([]);\n\n    return (\n        <MainContainer className=\"container\">\n            <div className=\"row justify-content-md-center\">\n                <div className=\"col-xl-4\" align='center'>\n                    <h3>Teams by Conference</h3>\n                    \n                    <div className=\"accordion\">\n                        {powerFive.map(conf => {\n                            return <ConferenceTeams Conference={ conf } Teams = { Teams }></ConferenceTeams>\n                        })}\n                    </div>\n                </div>\n            </div>\n        </MainContainer>\n    )\n};\n\nexport default ConferenceList;\n\n//  STYLED COMPONENTS STYLES\nconst MainContainer = styled.div`\n    button {\n        border: none;\n    }\n    * {\n        font-family: college-block;\n    }\n\n\n`\n","import React, { useState, useEffect } from 'react';\nimport Banner from '../components/Banner';\nimport ConferenceList from '../components/ConferenceList';\n// import SearchBar from \"react-native-dynamic-search-bar\";\nimport ReactGA from 'react-ga';\nimport MetaTags from 'react-meta-tags';\n\n\n\nexport const Home = () => {\n\n    const [Teams, setTeams] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://cruitathon-flask.herokuapp.com/\")\n            .then(response => response.json()\n            .then(data => {\n                setTeams(data);\n                // console.log(data);\n            })\n            );\n        ReactGA.initialize(\"UA-160209262-2\");\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n\n    \n    \n    return (\n        <div>\n            <MetaTags>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n            </MetaTags>\n            <Banner Teams = {Teams}></Banner>\n            <ConferenceList Teams = {Teams}></ConferenceList>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Blurb = (props) => {\n    // console.log(props.Team);\n    let blurbStyle;\n    if (props.Team) {\n        blurbStyle = {\n            color: props.Team.color_primary,\n            background: props.Team.color_secondary\n        };\n\n        return (\n            <MainContainer className=\"col-xl-6\">\n                <div className=\"key_data\" style={blurbStyle}>\n                    <h2>{props.Team.team}</h2>\n                    <p>{\"# of Commits: \" + props.Team.commit_count}</p>\n                    <p>{\"Average Commit Score: \" + props.Team.avg_score}</p>\n                </div>\n            </MainContainer>\n        )\n    }\n    else {\n        blurbStyle = {\n        };\n        return \"\";\n    }\n}\n\nexport default Blurb;\n\nconst MainContainer = styled.div`\n\n    .key_data {\n        border-radius: 10px;\n        padding: 20px;\n        font-weight: bold;\n        font-family: college-block;\n    }\n\n`\n\n//         background: var(--home-yellow);\n//         color: var(--home-blue);","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\nexport const Graph = (props) => {\n    // console.log(props);\n    // let data = props.data;\n\n    return (\n        <div className=\"col-xl-4\">\n            <Plot\n                data={props.data}\n                layout={ {width: 350, height: 450, title: props.name} }\n            />\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport Banner from '../components/Banner';\nimport Blurb from '../components/Blurb';\nimport { Graph } from '../components/Graph';\nimport ReactGA from 'react-ga';\nimport MetaTags from 'react-meta-tags';\n\n\nexport const Team = (props) => {\n    const [Team, setTeam] = useState({});\n\n    useEffect(() => {\n        let url = \"https://cruitathon-flask.herokuapp.com/team/\" + props.match.params.id;\n        fetch(url)\n            .then(response => response.json()\n            .then(data => {\n                setTeam(data);\n                // console.log(data);\n            })\n            );\n        ReactGA.initialize(\"UA-160209262-2\");\n        ReactGA.pageview(window.location.pathname);\n    }, [props.match.params.id]);\n\n    // console.log(props);\n    // console.log(Team);\n\n    return (\n        <div>\n            <MetaTags>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n            </MetaTags>\n            <Banner Team={Team.team_aggregate_stats} Teams={props.location.state}></Banner>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Blurb Team={Team.team_aggregate_stats} />\n                </div>\n                <div className=\"row\">\n                    <Graph data={Team.team_position_stats} name={props.match.params.id + \" Commits by Position\"}/>\n                    <Graph data={Team.team_state_stats} name={props.match.params.id + \" Commits by Home State\"}/>\n                    <Graph data={Team.team_competition_stats} name={props.match.params.id + \" Commits by Rival Offers\"}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Team;","import React, {useEffect} from 'react';\nimport {Route} from 'react-router-dom';\n// import * as firebase from 'firebase/app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n// import ReactGA from 'react-ga';\n\n\nimport Home from './pages/Home';\nimport Team from './pages/Team';\n\nfunction App() {\n  // const trackingId = \"UA-160209262-2\";\n  // ReactGA.initialize(trackingId);\n  useEffect(() => {\n    console.log('GA Init');\n    // ReactGA.initialize(\"UA-160209262-2\")\n\n    // ReactGA.pageview('/')\n  }, []);\n\n  return (\n    <div>\n      <Route path='/' component={Home} exact />\n      <Route path='/team/:id' component={Team}/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}