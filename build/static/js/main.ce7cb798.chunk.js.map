{"version":3,"sources":["components/SearchBar.js","components/Banner.js","components/ConferenceTeams.js","components/ConferenceList.js","pages/Home.js","components/Blurb.js","components/Graph.js","components/Comments.js","components/RecruitingMap.js","pages/Team.js","pages/Pet.js","components/SignUpForm.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","liststyle","color","liststyletype","useState","search","setSearch","searchResults","setSearchResults","useEffect","results","teamsList","filter","team","toLowerCase","includes","className","type","onChange","event","target","value","id","placeholder","map","item","style","onClick","to","pathname","state","Banner","Team","bannerStyle","Teams","School","color_secondary","background","color_primary","MainContainer","Jumbotron","styled","div","ConferenceTeams","Conference","open","setOpen","fontSize","aria-controls","aria-expanded","Collapse","in","ConferenceList","align","conf","Home","setTeams","TeamsList","ReactGA","initialize","pageview","window","location","name","content","Blurb","blurbStyle","Year","commit_count","avg_score","Graph","data","layout","title","geo","scope","projection","showland","landcolor","subunitcolor","countrycolor","countrywidth","subunitwidth","Comments","comments","text","setText","commentsList","setCommentsList","isFirstRun","useRef","dogResults","setDogResults","client","Client","apiKey","secret","searchParams","age","before","status","limit","animal","then","response","animals","console","log","length","catch","err","current","scrollTo","left","top","document","body","scrollHeight","behavior","randomAdopt","uniqueRandomArray","paddingTop","fontFamily","marginLeft","Form","onSubmit","preventDefault","requestOptions","method","headers","JSON","stringify","reset","fetch","json","Group","controlId","Control","as","rows","Button","variant","argument","Row","justifyContent","Spinner","animation","role","loadPage","comment","dog","hasImage","primary_photo_cropped","hasOwnProperty","error","padding","display","alignItems","textAlign","href","url","Image","src","small","height","margin","RecruitingMap","setTeam","setSchool","year","setYear","mapType","setMapType","loading","setLoading","match","params","find","element","team_aggregate_stats","DropdownButton","size","e","Dropdown","Item","team_position_stats","team_competition_stats","team_state_stats","team_hometown_stats","showMap","comments_list","city","Pet","setCity","setResults","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","alt","SignUpForm","width","position","floatingLabelText","label","SignUp","App","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ce7cb798.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import useStateWithCallback from 'use-state-with-callback';\nimport { Link } from 'react-router-dom';\n// import styled from 'styled-components';\nimport teamsList from './Teams.json';\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\n\nexport const SearchBar = (props) => {\n    const liststyle = {\n        // display: 'None',\n        color: 'Black',\n        liststyletype: 'None'\n    };\n\n    const [search, setSearch] = useState('');\n    const [searchResults, setSearchResults] = useState([], searchResults => {\n    });\n    \n    useEffect(() => {\n        if (search === '') {\n            setSearchResults([]);\n        }\n        else {\n            const results = teamsList.filter((team) => team.team.toLowerCase().includes(search));\n            setSearchResults(results);\n        }\n    }, [search]);\n\n    const handleChange = event => {\n        setSearch(event.target.value.toLowerCase());\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center\">\n            <input type=\"text\" onChange={handleChange} id='teamInput' placeholder='Team Name' value={search} className=\"form-control form-control-lg text-center\"/>\n            {/* <InputGroup>\n                <FormControl placeholder=\"Team Name\" />\n            </InputGroup> */}\n            <div id=\"search_results\">\n                {searchResults.map(item => {\n                    return (\n                        <div className=\"list-group-item list-group-item-action justify-content-between\">\n                            <Link style={liststyle} onClick={() => setSearch('')} to={{pathname: '/team/' + item.team, state: item}}>{item.team}</Link>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nexport const Banner = ({Team, Teams, School}) => {\n    let bannerStyle;\n    // console.log(School);\n    if (School) {\n        bannerStyle = {\n            color: School.color_secondary,\n            background: School.color_primary\n        }\n    }\n    else {\n        bannerStyle = {\n            color: \"#FFC300\",\n            background: \"#1F618D\"\n        }\n    }\n    return (\n        // <MainContainer className=\"jumbotron text-center\" style={bannerStyle}>\n        //     <Link to= \"/\"><h1 style={bannerStyle}>Cruitathon</h1></Link>\n        //     <p style={bannerStyle}>Using College Football recruiting data to prove that my team is better than yours</p>\n        //     <SearchBar Teams= {Teams} />\n        // </MainContainer>\n        <MainContainer>\n            <Jumbotron className=\"jumbotron text-center\" style={bannerStyle}>\n                <Link to= \"/\"><h1 style={bannerStyle}>Cruitathon</h1></Link>\n                <p style={bannerStyle}>Using College Football recruiting data to prove that my team is better than yours</p>\n                <SearchBar Teams= {Teams} />\n            </Jumbotron>\n        </MainContainer>\n    )\n}\n\nexport default Banner;\n\n//  STYLED COMPONENTS STYLES\nconst MainContainer = styled.div`\n    background: var(--home-blue);\n    \n    * {\n        font-family: college-block;\n        color: var(--home-yellow);\n    }\n\n`","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Collapse from 'react-bootstrap/Collapse';\n\nexport const ConferenceTeams = ( { Conference, Teams }) => {\n    const [open, setOpen] = useState(false);\n    // console.log(Teams);\n    return (\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <h3 className=\"mb-0\"><button style={{fontSize: \"24px\"}} onClick={() => setOpen(!open)}\n                    aria-controls=\"example-collapse-text\"\n                    aria-expanded={open} className=\"btn btn-link\">{Conference}</button></h3>\n            </div>\n            <Collapse in={open}>\n                <div className=\"card-body collapse\" id=\"example-collapse-text\">\n                    {Teams.filter(Team => Team[\"conference\"] === Conference).map(Team => {\n                            // console.log(Teams);\n                            return (\n                                <div>\n                                    <Link style={{fontSize: \"24px\"}} to={{pathname: '/team/' + Team.team, Teams: Team}} Team={Team}>{Team.team}</Link>\n                                </div>\n                            )\n                    })}\n                    {/* {Teams.map(Team => {\n                        if (Team.conference === Conference ) { \n                            // console.log(Teams);\n                            return (\n                                <div>\n                                    <Link to={{pathname: '/team/' + Team.team, Teams: Team}} Team={Team}>{Team.team}</Link>\n                                </div>\n                            )\n                        }\n                    })} */}\n                </div>\n            </Collapse>\n            \n        </div>\n    )\n}\n\nexport default ConferenceTeams;","import React from 'react';\nimport styled from 'styled-components';\nimport ConferenceTeams from './ConferenceTeams';\n// import { List } from \"semantic-ui-react\";\n\n\nexport const ConferenceList = ({ Teams }, props) => {\n    const conferenceNames = ['ACC', 'Big Ten', 'Big 12', 'Pac-12', 'SEC', 'C-USA', 'AAC', 'Sun Belt', 'MWC', 'MAC', 'Ind'];\n    // console.log(props);\n    // const [Teams, setTeams] = useState([]);\n    // console.log(Teams);\n\n    return (\n        <MainContainer className=\"container\">\n            <div className=\"row justify-content-md-center\">\n                <div className=\"col-xl-4\" align='center'>\n                    <h2>Teams by Conference</h2>\n                    \n                    <div className=\"accordion\">\n                        {conferenceNames.map(conf => {\n                            return <ConferenceTeams Conference={ conf } Teams = { Teams }></ConferenceTeams>\n                        })}\n                    </div>\n                </div>\n            </div>\n        </MainContainer>\n    )\n};\n\nexport default ConferenceList;\n\n//  STYLED COMPONENTS STYLES\nconst MainContainer = styled.div`\n    button {\n        border: none;\n    }\n    * {\n        font-family: college-block;\n    }\n\n\n`\n","import React, { useState, useEffect } from 'react';\nimport Banner from '../components/Banner';\nimport ConferenceList from '../components/ConferenceList';\n// import SearchBar from \"react-native-dynamic-search-bar\";\nimport ReactGA from 'react-ga';\nimport MetaTags from 'react-meta-tags';\nimport TeamsList from '../components/Teams.json';\n\n\nexport const Home = () => {\n\n    const [Teams, setTeams] = useState([]);\n\n    useEffect(() => {\n        // fetch(\"https://cruitathon-flask.herokuapp.com/\")\n        //     .then(response => response.json()\n        //     .then(data => {\n        //         setTeams(data);\n        //         // console.log(data);\n        //     })\n        //     );\n        setTeams(TeamsList);\n        // console.log(TeamsList);\n        ReactGA.initialize(\"UA-160209262-2\");\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n    \n    return (\n        <div>\n            <MetaTags>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n            </MetaTags>\n            <Banner Teams = {Teams}></Banner>\n            <ConferenceList Teams = {Teams}></ConferenceList>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Blurb = ({School, Team, Year}) => {\n    // console.log(Team);\n    let blurbStyle;\n    if (School) {\n        blurbStyle = {\n            color: School.color_primary,\n            background: School.color_secondary\n        };\n    }\n    if (Year === \"all\") {\n        Year = \"2018-2020\";\n    }\n    if (Team) {\n        return (\n            <MainContainer className=\"col-xl-6\">\n                <div className=\"key_data\" style={blurbStyle}>\n                    <h2>{Team.team}</h2>\n                    <h4>{Year} Recruiting Class</h4>\n                    <p>{\"# of Commits: \" + Team.commit_count}</p>\n                    <p>{\"Average Commit Score: \" + Team.avg_score}</p>\n                </div>\n            </MainContainer>\n        )\n    }\n    else {\n        blurbStyle = {\n        };\n        return \"\";\n    }\n}\n\nexport default Blurb;\n\nconst MainContainer = styled.div`\n\n    .key_data {\n        border-radius: 10px;\n        padding: 20px;\n        font-weight: bold;\n        font-family: college-block;\n    }\n\n`\n\n//         background: var(--home-yellow);\n//         color: var(--home-blue);","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\nexport const Graph = (props) => {\n    // if (props.data) {\n    //     console.log(props.data[0]);\n    // }\n    // props.data && props.data[0];\n    // let data = props.data;\n\n    return (\n        <Plot className=\"col-xl-4\"\n            data={props.data}\n            layout={ {\n                // width: 450, height: 550, \n                title: props.name, \n                geo: {\n                    scope: 'usa',\n                    projection: {\n                        type: 'albers usa'\n                    },\n                    showland: true,\n                    landcolor: 'rgb(250,250,250)',\n                    subunitcolor: 'rgb(217,217,217)',\n                    countrycolor: 'rgb(217,217,217)',\n                    countrywidth: 0.5,\n                    subunitwidth: 0.5\n                }} }\n        />\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport uniqueRandomArray from 'unique-random-array';\nimport styled from 'styled-components';\nimport Image from 'react-bootstrap/Image';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\nimport { Client } from \"@petfinder/petfinder-js\";\nimport Spinner from 'react-bootstrap/Spinner';\n\n\n\n\nexport const Comments = ({ team, comments, location}) => {\n    const [text, setText] = useState('');\n    const [commentsList, setCommentsList] = useState();\n    const isFirstRun = useRef(true);\n    const [dogResults, setDogResults] = useState([]);\n    \n    // console.log(isFirstRun);\n    useEffect(()=> {\n        const client = new Client({apiKey: \"tiUlZUY7YaX2rJiP3HCRbvBEBbunRE0alzNOW5VIon7bNegoho\", secret: \"eWwiB4nda2QhHdnOtff3aegAE1cb5idRFH0UvePm\"});\n        setCommentsList(comments);\n        const searchParams = {\n            location: location,\n            age: 'senior',\n            type: 'Dog',\n            before: '2019-12-07T19:13:01+00:00',\n            status: 'adoptable',\n            limit: 50,\n        };\n        if (location !== 'undefined, undefined'){\n            client.animal.search(\n                searchParams\n            )\n                .then(response => {\n                    // console.log(location);\n                    setDogResults(response.data.animals);\n                    console.log(response.data.animals);\n                    // return dogResults;\n                    if (response.data.animals.length === 0) {\n                        delete searchParams.age;\n                        client.animal.search(searchParams)\n                            .then(response => {\n                                console.log('no old dogs found, editing query parameters');\n                                setDogResults(response.data.animals);\n                                console.log(response.data.animals);\n                            })\n                    }\n                }\n                )\n                .catch(err => {\n                    console.log(err);\n                })\n                .then(response => {\n                    console.log('response: ', response);\n                })\n        }\n        \n        // console.log(comments);\n        // console.log(isFirstRun);\n    }, [comments])\n\n    useEffect(()=> {\n        if (!isFirstRun.current) {\n            window.scrollTo({left: 0,top: document.body.scrollHeight+300, behavior: \"smooth\"});\n        }\n    }, [commentsList])\n\n    const changeComment = event => {\n        event.preventDefault();\n        setText(event.target.value);\n    }\n    const submitComment = event => {\n        // console.log(comment);\n        event.preventDefault();\n        // let text = event.target.value;\n        console.log(text);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ text: {text}, team: {team} })\n            // body: {\"text\": {text}, \"team\": {team}}\n        };\n        // console.log(event.target);\n        event.target.reset();\n\n        let url = 'https://cruitathon-flask.herokuapp.com/submit';\n        fetch(url, requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                setCommentsList(data);\n                // console.log(data);\n            });\n        if (isFirstRun.current) {\n            isFirstRun.current = false;\n        }\n    }\n\n    // const importAll = r => {\n    //     return r.keys().map(r);\n    // }\n    // const images = importAll(require.context('../images', false, /\\.(png|jpe?g|svg)$/))\n    // const random = uniqueRandomArray(images);\n    const randomAdopt = uniqueRandomArray(dogResults);\n    \n    const loadPage = (argument) => {\n        if (!argument) {\n            return (\n                <Row style={{justifyContent: 'center'}} className=\"justify-content-md-center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </Row>\n            )\n        }\n    }\n\n    return (\n        <MainContainer className=\"comments-container\" style={{paddingTop: \"100px\", fontFamily: \"college-block\", marginLeft: \"20px\"}}>\n            <h1 className=\"comments-header\">Comments Section</h1>\n            <h6 >Post your thoughts here. This comment section is a work in progress. In the meantime, everyone gets a dog picture.</h6>\n            <Form onSubmit={submitComment}>\n                <Form.Group controlId='formComment'>\n                    <Form.Control as=\"textarea\" rows=\"3\" name='text' onChange={changeComment}/>\n                </Form.Group>\n                <Button variant=\"dark\" type=\"submit\" >Submit</Button>\n            </Form>\n            \n            <div>\n                <br/>\n                <br/>\n                <h4>Recent Comments:</h4>\n                {loadPage(commentsList)}\n                {commentsList && commentsList.map(comment => {\n                    // console.log(comment);\n                    if (dogResults.length > 0) {\n                        let dog = randomAdopt();\n                        // while (!dog.primary_photo_cropped.small) {\n                        // console.log(dog);\n                        let hasImage = false;\n                        while (!hasImage) {\n                            try {\n                                if (dog.primary_photo_cropped.hasOwnProperty(\"small\")){\n                                    hasImage = true;\n                                }\n                                // dog.primary_photo_cropped.hasOwnProperty(\"small\");\n                            }\n                            catch(error) {\n                                console.log(error);\n                                dog = randomAdopt();\n                            }\n                        }\n                        // while (!dog.hasOwnProperty('primary_photo_cropped') || !dog.primary_photo_cropped.hasOwnProperty(\"small\")){\n                        //     dog = randomAdopt();\n                        // }\n                        return <Row style={{padding: \"20px\"}}>\n                            <div style={{display: \"inline-block\", alignItems: \"center\", textAlign: \"center\"}}>\n                                <a href={dog.url}>\n                                    <Image src={dog.primary_photo_cropped.small} height=\"90\" style={{display: \"block\", margin:\"0 auto\"}}/>\n                                </a>\n                                <a href={dog.url} style={{fontSize: 20, color: 'black', background: 'gold', textAlign:\"center\"}}>adopt me!</a>\n                            </div>\n                            <div style={{display: \"inline-block\"}}>\n                                <p className=\"speech-bubble\" >{comment.text}</p>\n                            </div>\n                        </Row>\n                        // <div style={{padding: \"20px\"}}>\n                        //     <Image src={dog.primary_photo_cropped.small} height=\"60\"/>\n                        //     <p className=\"speech-bubble\" >{comment.text}</p>\n                        // </div>\n                    }\n                    else {\n                        return null;\n                    }\n                })}\n                {/* <div>\n                    {dogResults.map(item=>{\n                        console.log(item.primary_photo_cropped.small);\n                        if (item.primary_photo_cropped) {\n                        return (\n                            <div>\n                                <img src={item.primary_photo_cropped.small} alt=\"\"/>\n                                <p>{item.url}</p>\n                            </div>\n                            )\n                        }\n                    })}\n                </div> */}\n            </div>\n        </MainContainer>\n    )\n}\n\nexport default Comments;\n\nconst MainContainer = styled.div`\n\n    .comments-container {\n        border-radius: 10px;\n        padding: 20px;\n        // font-weight: bold;\n        font-family: college-block;\n        \n    }\n\n    .comments-header {\n        background: #464646;\n        border-radius: .2em;\n        color: white;\n        padding: 10px;\n    }\n\n    .speech-bubble {\n        position: relative;\n        background: #DFDFDF;\n        border-radius: .4em;\n        color: black;\n        margin-left: 20px;\n        margin-top: 20px;\n        padding: 10px;\n        font-family: calibri;\n        // font-weight: bold;\n        font-size: 20px;\n\n    }\n    \n    .speech-bubble:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 50%;\n        width: 0;\n        height: 0;\n        border: 20px solid transparent;\n        border-right-color: #DFDFDF;\n        border-left: 0;\n        border-top: 0;\n        margin-top: -5px;\n        margin-left: -10px;\n    }\n\n`","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport const RecruitingMap = (props) => {\n    // var updatemenus=[\n    //     {\n    //         buttons: [\n    //             {\n    //                 args: ['type', 'surface'],\n    //                 label: '3D Surface',\n    //                 method: 'restyle'\n    //             },\n    //             {\n    //                 args: ['type', 'heatmap'],\n    //                 label:'Heatmap',\n    //                 method:'restyle'\n    //             }\n    //         ],\n    //         direction: 'left',\n    //         pad: {'r': 10, 't': 10},\n    //         showactive: true,\n    //         type: 'buttons',\n    //         x: 0.1,\n    //         xanchor: 'left',\n    //         y: 1.1,\n    //         yanchor: 'top'\n    //     }\n    // ];\n    \n\n    return (\n        <Plot\n        className=\"col-xl-8\"\n        data={props.data}\n        layout={ {\n            // width: 700,\n            // height: 550,\n            title: props.name, \n            geo: {\n                scope: 'usa',\n                projection: {\n                    type: 'albers usa'\n                },\n                showland: true,\n                landcolor: 'rgb(250,250,250)',\n                subunitcolor: 'rgb(217,217,217)',\n                countrycolor: 'rgb(217,217,217)',\n                countrywidth: 1,\n                subunitwidth: 1,\n                // updatemenus: updatemenus,\n            }}\n        }\n    />\n    )\n}\n\nexport default RecruitingMap;","import React, { useState, useEffect } from 'react';\nimport Banner from '../components/Banner';\nimport Blurb from '../components/Blurb';\nimport { Graph } from '../components/Graph';\nimport ReactGA from 'react-ga';\nimport MetaTags from 'react-meta-tags';\n// import CommentBox from 'react-commentbox';\nimport Comments from '../components/Comments';\nimport TeamsList from '../components/Teams.json';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport {RecruitingMap} from '../components/RecruitingMap';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nexport const Team = (props) => {\n    const [Team, setTeam] = useState({});\n    const [School, setSchool] = useState({});\n    const [year, setYear] = useState(2020);\n    const [mapType, setMapType] = useState('state');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        let url = \"https://cruitathon-flask.herokuapp.com/team/\" + props.match.params.id + \"/\" + year;\n        // let url = \"http://127.0.0.1:5000/team/\" + props.match.params.id + \"/\" + year;\n        fetch(url)\n            .then(response => response.json()\n            .then(data => {\n                setTeam(data);\n                // console.log(data);\n                // console.log(Team);\n                setLoading(false);\n            })\n            );\n        ReactGA.initialize(\"UA-160209262-2\");\n        ReactGA.pageview(window.location.pathname);\n        setSchool(TeamsList.find(element => element[\"team\"] === props.match.params.id));\n\n        // console.log(Team);\n        // console.log(TeamsList.find(element => element[\"team\"] === props.match.params.id));\n    // }, [props.match.params.id]);\n    }, [props.match.url, props.match.params.id, year]);\n    \n    const showMap = (Team, props) => {\n        if (mapType === 'state'){\n            return (\n                <RecruitingMap data={Team.team_state_stats} name={props.match.params.id + \" Commits by Home State\"}/>\n            )\n        }\n        else {\n            return (\n                <RecruitingMap data={Team.team_hometown_stats} name={props.match.params.id + \" Commits by Geographic Location\"}></RecruitingMap>\n            )\n        }\n    }\n    const loadPage = () => {\n        if (loading) {\n            return (\n                <Row style={{justifyContent: 'center'}} className=\"justify-content-md-center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </Row>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <MetaTags>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n            </MetaTags>\n            <Banner School={School} Team={Team.team_aggregate_stats} Teams={props.location.state}></Banner>\n            {loadPage()}\n            {/* <div>{School.city + \", \" + School.state}</div> */}\n\n            {/* <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner> */}\n            <div className=\"container\">\n                <DropdownButton id=\"dropdown-basic-button\" size='lg' title={year} onClick={(e)=>{\n                    setYear(e.target.text);\n                    // console.log(e.target.text);\n                    console.log(props.match.params.id);\n                    // e.preventDefault();\n                    // e.target.text = year;\n                    // fetch call to flask api for updated result set by year\n                    }}>\n                    {[2020, 2019, 2018, \"all\"].map((year) => {\n                        return <Dropdown.Item>{year}</Dropdown.Item>\n                    })}\n                </DropdownButton>\n                <div className=\"row\">\n                    <Blurb School={School} Team={Team.team_aggregate_stats} Year = {year}/>\n                </div>\n                <Row className=\"justify-content-md-center\">\n                    <Graph data={Team.team_position_stats} name={props.match.params.id + \" Commits by Position\"}/>\n                    {/* <Graph data={Team.team_state_stats} name={props.match.params.id + \" Commits by Home State\"}/> */}\n                    <Graph data={Team.team_competition_stats} name={props.match.params.id + \" Commits by Rival Offers\"}/>\n                </Row>\n                <Row>\n                    <Button variant=\"secondary\" value=\"state\" onClick={(e)=> setMapType(e.target.value)} size='lg'>State View</Button>\n                    <Button variant=\"dark\" value=\"geo\" onClick={(e)=> setMapType(e.target.value)} size='lg'>Nation View</Button>\n                </Row>\n                {/* <h3>{mapType}</h3> */}\n                    {/* <Graph data={Team.team_hometown_stats} name={props.match.params.id + \" Commits by Geographic Location\"}/> */}\n                <Row className=\"justify-content-md-center\">\n                    {showMap(Team, props)}\n                </Row>\n                {/* <RecruitingMap style={{display: 'none'}} data={Team.team_hometown_stats} name={props.match.params.id + \" Commits by Geographic Location\"}></RecruitingMap> */}\n\n                <div className=\"row\">\n                    <Comments team={props.match.params.id} comments={Team.comments_list} location={School.city + \", \" + School.state}></Comments>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Team;","import React, {useState, useEffect} from 'react';\nimport { Client } from \"@petfinder/petfinder-js\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nexport const Pet = () => {\n    const [city, setCity] = useState('');\n    const [results, setResults] = useState([]);\n    // const [search, setSearch] = useState('');\n    useEffect(()=>{\n        let url = \"https://api.ipify.org/\";\n        fetch(url)\n        .then(response => {\n            console.log(response);\n        })\n    }, [])\n\n    const client = new Client({apiKey: \"tiUlZUY7YaX2rJiP3HCRbvBEBbunRE0alzNOW5VIon7bNegoho\", secret: \"eWwiB4nda2QhHdnOtff3aegAE1cb5idRFH0UvePm\"});\n\n    const searchCity = () => {\n        console.log(city);\n        client.animal.search({\n            location: city,\n            age: 'senior',\n            type: 'Dog',\n            before: '2019-12-07T19:13:01+00:00',\n            status: 'adoptable'\n        })\n            .then(response => {\n                setResults(response.data.animals);\n                console.log(response.data.animals);\n            }\n            )\n            // .then(function (response) {\n            //     // console.log(response);\n            //     setResults(response.data.animals);\n            //     // Do something with `response.data.animals`\n            // })\n            // .then(console.log(results))\n            .catch(function (error) {\n                // Handle the error\n                console.log('error somewhere');\n            });\n    }\n\n    // client.animal.search({location: city})\n    //     .then(function (response) {\n    //         console.log(response);\n    //         // Do something with `response.data.animals`\n    //     })\n    //     .catch(function (error) {\n    //         // Handle the error\n    //     });\n    return (\n        <div>\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">City:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl \n                placeholder=\"Search City Here\"\n                aria-label=\"\"\n                aria-describedby=\"basic-addon1\"\n                onChange={(e)=>setCity(e.target.value)}\n                />\n            </InputGroup>\n            <Button onClick={searchCity}>Submit</Button>\n            <div>\n                {results.map(item=>{\n                    // return <p>{item.primary_photo_cropped.full}</p>\n                    console.log(item.primary_photo_cropped);\n                    if (item.primary_photo_cropped) {\n                        return (\n                            <div>\n                                {/* <p>{item.primary_photo_cropped.full}</p> */}\n                                <img src={item.primary_photo_cropped.small} alt=\"\"/>\n                                <p>{item.url}</p>\n                            </div>\n                            )\n                    }\n                    else {\n                        return null;\n                    }\n                    // return <p>{item.photos.full}</p>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Pet;\n","import React from 'react';\nimport FlatButton from \"material-ui/FlatButton\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport TextField from \"material-ui/TextField\";\n// import PasswordStr from \"./PasswordStr\";\n// import \"./style.css\";\n\nexport const SignUpForm = () => {\n    const signUpFormStyle = {\n        width: '50%',\n        textAlign: 'center',\n        position: 'relative',\n        // padding: '20px',\n        left: '50%'\n\n    }\n    return (\n        <div className=\"loginBox\" style={signUpFormStyle}>\n            <h1>Sign Up</h1>\n            <form>\n                <TextField\n                    name='username'\n                    floatingLabelText='username'\n                />\n                <TextField\n                    name='email'\n                    floatingLabelText='email'\n                />\n                <TextField\n                    name='password'\n                    floatingLabelText='password'\n                />\n                <TextField\n                    name='pwconfirm'\n                    floatingLabelText='confirm password'\n                />\n                <br />\n                <RaisedButton\n                    className=\"signUpSubmit\"\n                    type=\"submit\"\n                    label=\"submit\"\n                />\n                <p>\n                    Aleady have an account? <br />\n                    <a href=\"/\">Log in here</a>\n                </p>\n            </form>            \n        </div>\n    )\n}\n\nexport default SignUpForm;","import React, {useState, useEffect} from 'react';\nimport Banner from '../components/Banner';\nimport TeamsList from '../components/Teams.json';\nimport SignUpForm from '../components/SignUpForm';\nimport ReactGA from 'react-ga';\nimport MetaTags from 'react-meta-tags';\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\n\n\nexport const SignUp = () => {\n    const [Teams, setTeams] = useState([]);\n\n    useEffect(() => {\n        setTeams(TeamsList);\n        // console.log(TeamsList);\n        ReactGA.initialize(\"UA-160209262-2\");\n        ReactGA.pageview(window.location.pathname);\n    }, []);\n    return (\n        <div>\n            <MuiThemeProvider>\n                <MetaTags>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n                </MetaTags>\n                <Banner Teams = {Teams}></Banner>\n                <SignUpForm></SignUpForm>\n            </MuiThemeProvider>\n        </div>\n    )\n}\n\nexport default SignUp;","import React, {useEffect} from 'react';\nimport {Route} from 'react-router-dom';\n// import * as firebase from 'firebase/app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n// import ReactGA from 'react-ga';\n\n\nimport Home from './pages/Home';\nimport Team from './pages/Team';\nimport Pet from './pages/Pet';\nimport SignUp from './pages/SignUp';\n\nfunction App() {\n  useEffect(() => {\n  }, []);\n\n  return (\n    <div>\n      <Route path='/' component={Home} exact />\n      <Route path='/team/:id' component={Team}/>\n      <Route path='/pet' component={Pet}/>\n      <Route path='/signup' component={SignUp} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}